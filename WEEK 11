#Write a Python program that performs division and modulo operations on two numbers provided by the user. Handle division by zero and non-numeric inputs.
def main():
    try:
        num1 = float(input())
        num2 = float(input())
        division_result = num1 / num2
        modulo_result = int(num1 % num2)
        print(f"Division result: {division_result}")
        print(f"Modulo result: {modulo_result}")
    
    except ValueError:
        print("Error: Non-numeric input provided.")
    
    except ZeroDivisionError:
        print("Error: Cannot divide or modulo by zero.")
if __name__ == "__main__":
    main()
    


#Develop a Python program that safely calculates the square root of a number provided by the user. Handle exceptions for negative inputs and non-numeric inputs.
import math
def safe_sqrt(num):
    try:
        num = float(num)
        if num < 0:
            raise ValueError("Cannot calculate the square root of a negative number.")
        result = math.sqrt(num)
        print(f"The square root of {num:.1f} is {result:.2f}")
    except ValueError as ve:
        print(f"Error: {ve}")
    except Exception as e:
        print(f"Error: {e}")

num = input()
safe_sqrt(num)

#Write a Python program that asks the user for their age and prints a message based on the age. Ensure that the program handles cases where the input is not a valid integer.
def get_age():
    user_input = input()

    try:
        age = int(user_input)
        if age < 0:
            print("Error: Please enter a valid age.")
        else:
            print(f"You are {age} years old.")
    except ValueError:
        print("Error: Please enter a valid age.")
    except EOFError:
        print("\nError: Please enter a valid age.")
        

if __name__ == "__main__":
    get_age()

#Write a Python script that asks the user to enter a number within a specified range (e.g., 1 to 100). Handle exceptions for invalid inputs and out-of-range numbers.
def validate_input():
    while True:
        try:
            user_input = input()
            if not user_input:
                raise EOFError()
            user_input = int(user_input)
            if user_input < 1 or user_input > 100:
                raise ValueError()
            print("Valid input.")
            break 
        except EOFError as eof:
            print(f"Error: {eof}")
            break 
        except ValueError as ve:
            print(f"Error: {ve}")
        except Exception as e:
            print(f"Error: {e}")

validate_input()

#Develop a Python program that safely performs division between two numbers provided by the user. Handle exceptions like division by zero and non-numeric inputs
def safe_division():
    try:
        num1 = float(input())
        num2 = float(input())
        
        result = num1 / num2
        print(result)
    except ZeroDivisionError:
        print("Error: Cannot divide or modulo by zero.")
    except ValueError:
        print("Error: Non-numeric input provided.")
    except Exception as e:
        print("Error:", e)
safe_division()


